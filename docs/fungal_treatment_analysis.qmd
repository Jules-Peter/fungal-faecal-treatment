---
title: "Comprehensive Analysis of Fungal Faecal Treatment"
author: "Analysis Report"
date: "`r Sys.Date()`"
format: 
  html:
    toc: true
    toc-depth: 3
    code-fold: true
    code-summary: "Show code"
    theme: cosmo
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)

# Load required libraries
library(tidyverse)
library(ggplot2)
library(car)
library(broom)
library(knitr)
library(patchwork)
library(corrplot)
library(emmeans)
```

# Introduction

This document presents a comprehensive analysis of fungal treatment effects on faecal samples. The study investigates whether different fungal species can effectively reduce bacterial concentrations in faecal matter while maintaining viable growth. This has potential applications in biological waste treatment and pathogen reduction.

## Study Objectives

The analysis examines:

1. **Fungal growth speed over time**: How quickly different fungal species colonize the faecal substrate
2. **Bacterial (E. coli) concentration changes**: The antimicrobial effectiveness of each fungal treatment
3. **pH levels**: Environmental conditions that may influence treatment success
4. **Dry weight changes**: Water content dynamics during fungal colonization
5. **Integrated multivariate analysis**: Relationships between all measured variables

## Statistical Approach

For each analysis, we will:
- Test ANOVA assumptions (normality and homogeneity of variance)
- Apply appropriate statistical tests (parametric ANOVA or non-parametric Kruskal-Wallis)
- Perform post-hoc comparisons when significant differences are detected
- Interpret results in the biological context

# Data Loading and Preparation

```{r data-loading}
# Load the cleaned experiment data
experiment_data <- read_csv("../data/raw/experiment_data_cleaned.csv")

# Display data structure
glimpse(experiment_data)

# Check for missing values
missing_summary <- experiment_data %>%
  summarise_all(~sum(is.na(.))) %>%
  pivot_longer(everything(), names_to = "variable", values_to = "missing_count") %>%
  filter(missing_count > 0)

kable(missing_summary, caption = "Missing values summary")
```

# 1. Fungal Growth Speed Analysis

## 1.1 Data Preparation

```{r growth-data-prep}
# Prepare growth data in long format
growth_data_long <- experiment_data %>%
  select(id_treatment, species, id_faeces, 
         area_size_0, area_size_7, area_size_14) %>%
  pivot_longer(cols = starts_with("area_size_"), 
               names_to = "timepoint", 
               values_to = "area_size") %>%
  mutate(dpi = as.numeric(str_extract(timepoint, "\\d+"))) %>%
  filter(!is.na(area_size))

# Calculate growth rates
growth_rates <- growth_data_long %>%
  group_by(id_treatment, species) %>%
  arrange(dpi) %>%
  mutate(growth_rate = (area_size - lag(area_size)) / (dpi - lag(dpi))) %>%
  filter(!is.na(growth_rate))
```

## 1.2 Visualization

```{r growth-visualization}
# Growth curves by species
p1 <- ggplot(growth_data_long, aes(x = dpi, y = area_size, color = species)) +
  geom_point(alpha = 0.6) +
  geom_smooth(method = "loess", se = TRUE) +
  facet_wrap(~species, scales = "free_y") +
  labs(title = "Fungal Growth Curves by Species",
       x = "Days Post Inoculation",
       y = "Area Size",
       color = "Species") +
  theme_minimal() +
  theme(legend.position = "bottom")

print(p1)
```

### Growth Curve Interpretation

The growth curves above show the colonization pattern of each fungal species over time (0, 7, and 14 days post-inoculation). Key observations:

- **Growth trajectory**: The smoothed lines (loess curves) indicate whether growth is linear, exponential, or plateauing
- **Variability**: The shaded confidence intervals show the consistency of growth within each species
- **Species differences**: Different y-axis scales reveal substantial variation in colonization capacity between species
- **Control comparison**: The control treatments help identify baseline changes not attributable to fungal activity

```{r growth-rates-viz}
# Box plot of growth rates
p2 <- ggplot(growth_rates, aes(x = species, y = growth_rate, fill = species)) +
  geom_boxplot(alpha = 0.7) +
  geom_jitter(width = 0.2, alpha = 0.5) +
  labs(title = "Growth Rate Distribution by Species",
       x = "Species",
       y = "Growth Rate (area/day)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "none")

print(p2)
```

### Growth Rate Analysis

The boxplot displays the distribution of daily growth rates for each species:

- **Median growth rate**: The horizontal line in each box indicates the typical growth speed
- **Variability**: Box height shows the interquartile range (IQR), indicating growth consistency
- **Outliers**: Points beyond the whiskers represent unusual growth patterns that may indicate contamination or exceptional conditions
- **Species ranking**: Visual comparison allows immediate identification of fast vs. slow colonizers

## 1.3 Statistical Analysis - ANOVA Assumptions

### 1.3.1 Normality Test

Before performing ANOVA, we must verify that the data follows a normal distribution within each group. This is a critical assumption for parametric tests.

```{r normality-test-growth}
# Filter for 14 dpi data
growth_14dpi <- growth_data_long %>%
  filter(dpi == 14, !is.na(area_size))

# Shapiro-Wilk test by species
normality_results <- growth_14dpi %>%
  group_by(species) %>%
  summarise(
    n = n(),
    shapiro_statistic = ifelse(n() >= 3, shapiro.test(area_size)$statistic, NA),
    shapiro_p_value = ifelse(n() >= 3, shapiro.test(area_size)$p.value, NA)
  )

kable(normality_results, caption = "Shapiro-Wilk normality test for growth at 14 dpi")
```

#### Interpreting the Shapiro-Wilk Test

- **Null hypothesis**: The data follows a normal distribution
- **p-value > 0.05**: We fail to reject the null hypothesis (data is likely normal)
- **p-value < 0.05**: We reject the null hypothesis (data is likely non-normal)
- **NA values**: Indicate insufficient sample size (n < 3) for the test

```{r qq-plots-growth}
# Q-Q plots
ggplot(growth_14dpi, aes(sample = area_size)) +
  stat_qq() +
  stat_qq_line() +
  facet_wrap(~species, scales = "free") +
  labs(title = "Q-Q Plots for Growth Data by Species") +
  theme_minimal()
```

#### Q-Q Plot Interpretation

Quantile-Quantile (Q-Q) plots visually assess normality:

- **Points on the line**: Data follows a normal distribution
- **S-shaped curve**: Data has heavy tails (more extreme values than normal)
- **Inverted S-shape**: Data has light tails (fewer extreme values than normal)
- **Systematic deviation**: Indicates skewness or other departures from normality

### 1.3.2 Homogeneity of Variance

The second critical assumption for ANOVA is that variance is similar across all groups (homoscedasticity).

```{r homogeneity-test-growth}
# Levene's test for homogeneity of variance
if(nrow(growth_14dpi) > 0) {
  levene_result <- leveneTest(area_size ~ species, data = growth_14dpi)
  print(levene_result)
}
```

#### Interpreting Levene's Test

- **Null hypothesis**: All groups have equal variances
- **p-value > 0.05**: Variances are homogeneous (assumption met)
- **p-value < 0.05**: Variances are heterogeneous (assumption violated)

If this assumption is violated, we may need to:
1. Use Welch's ANOVA (robust to unequal variances)
2. Transform the data (log, square root)
3. Use non-parametric alternatives (Kruskal-Wallis)

```{r residual-plots-growth}
# Visual inspection with residual plots
if(nrow(growth_14dpi) > 0) {
  growth_model <- lm(area_size ~ species, data = growth_14dpi)
  par(mfrow = c(2, 2))
  plot(growth_model)
}
```

#### Residual Plot Interpretation

The four diagnostic plots reveal:

1. **Residuals vs Fitted**: Should show random scatter (no patterns)
2. **Q-Q Residuals**: Points should follow the diagonal line (normality of residuals)
3. **Scale-Location**: Should show horizontal band (constant variance)
4. **Residuals vs Leverage**: Identifies influential outliers (Cook's distance)

## 1.4 ANOVA Analysis

Based on the assumption tests above, we now perform the appropriate statistical analysis.

```{r growth-anova}
# Perform ANOVA if assumptions are met
if(nrow(growth_14dpi) > 0 && length(unique(growth_14dpi$species)) > 1) {
  growth_anova <- aov(area_size ~ species, data = growth_14dpi)
  
  # ANOVA summary
  anova_summary <- tidy(growth_anova)
  kable(anova_summary, caption = "ANOVA results for fungal growth at 14 dpi")
  
  # Post-hoc test if significant
  if(anova_summary$p.value[1] < 0.05) {
    posthoc <- TukeyHSD(growth_anova)
    print(posthoc)
    plot(posthoc)
  }
}
```

### ANOVA Results Interpretation

The ANOVA table provides:

- **F-statistic**: Ratio of between-group to within-group variance (larger values indicate greater differences)
- **p-value**: Probability of observing these differences by chance
  - p < 0.05: Significant differences exist between at least two species
  - p â‰¥ 0.05: No significant differences detected

### Post-hoc Analysis

If ANOVA shows significant differences, Tukey's HSD (Honestly Significant Difference) test identifies which specific pairs of species differ:

- **diff**: Mean difference between species pairs
- **lwr/upr**: 95% confidence interval for the difference
- **p adj**: Adjusted p-value (controls for multiple comparisons)

The plot visualizes these pairwise comparisons, where confidence intervals not crossing zero indicate significant differences.

# 2. Bacterial Concentration Analysis

This section examines the antimicrobial effectiveness of different fungal treatments on E. coli concentrations in faecal samples.

## 2.1 Data Preparation

```{r bacteria-data-prep}
# Calculate log reduction
bacteria_data <- experiment_data %>%
  filter(!is.na(e_coli_conc), !is.na(e_coli_mean)) %>%
  mutate(
    log_reduction = log10(e_coli_conc/e_coli_mean),
    cfu_reduction_percent = ((e_coli_mean - e_coli_conc)/e_coli_mean) * 100
  )

# Summary statistics
bacteria_summary <- bacteria_data %>%
  group_by(species) %>%
  summarise(
    n = n(),
    mean_log_reduction = mean(log_reduction, na.rm = TRUE),
    sd_log_reduction = sd(log_reduction, na.rm = TRUE),
    mean_percent_reduction = mean(cfu_reduction_percent, na.rm = TRUE)
  )

kable(bacteria_summary, caption = "Bacterial reduction summary by species")
```

### Understanding Log Reduction

- **Log reduction = log10(final/initial)**: 
  - Negative values indicate bacterial reduction
  - -1 log = 90% reduction
  - -2 log = 99% reduction
  - -3 log = 99.9% reduction
- **Percent reduction**: More intuitive but less suitable for statistical analysis due to ceiling effect

## 2.2 Visualization

```{r bacteria-visualization}
# Log reduction by species
p3 <- ggplot(bacteria_data, aes(x = species, y = log_reduction, fill = species)) +
  geom_boxplot(alpha = 0.7) +
  geom_jitter(width = 0.2, alpha = 0.5) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(title = "E. coli Log Reduction by Fungal Species",
       x = "Species",
       y = "Log10 Reduction",
       subtitle = "Negative values indicate reduction") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "none")

print(p3)
```

### Boxplot Interpretation

- **Red dashed line at 0**: No change in bacterial concentration
- **Below the line**: Bacterial reduction (desirable outcome)
- **Above the line**: Bacterial growth (undesirable - may indicate treatment failure)
- **Box position**: Lower boxes indicate more effective antimicrobial activity
- **Box width**: Wider boxes suggest inconsistent treatment effects

```{r bacteria-distribution}
# Distribution of reductions
p4 <- ggplot(bacteria_data, aes(x = log_reduction, fill = species)) +
  geom_histogram(bins = 20, alpha = 0.7) +
  facet_wrap(~species, scales = "free_y") +
  labs(title = "Distribution of E. coli Log Reductions",
       x = "Log10 Reduction",
       y = "Count") +
  theme_minimal() +
  theme(legend.position = "none")

print(p4)
```

### Distribution Analysis

The histograms reveal:
- **Distribution shape**: Normal, skewed, or bimodal patterns
- **Consistency**: Narrow distributions indicate reliable treatment effects
- **Outliers**: Extreme values may indicate experimental issues or exceptional responses
- **Treatment effectiveness**: Distributions centered on negative values show consistent bacterial reduction

## 2.3 Statistical Analysis - ANOVA Assumptions

### 2.3.1 Normality Test

```{r normality-test-bacteria}
# Shapiro-Wilk test for log reduction
bacteria_normality <- bacteria_data %>%
  group_by(species) %>%
  summarise(
    n = n(),
    shapiro_statistic = ifelse(n() >= 3, shapiro.test(log_reduction)$statistic, NA),
    shapiro_p_value = ifelse(n() >= 3, shapiro.test(log_reduction)$p.value, NA)
  )

kable(bacteria_normality, caption = "Shapiro-Wilk normality test for log reduction")

# Q-Q plots
ggplot(bacteria_data, aes(sample = log_reduction)) +
  stat_qq() +
  stat_qq_line() +
  facet_wrap(~species, scales = "free") +
  labs(title = "Q-Q Plots for Log Reduction by Species") +
  theme_minimal()
```

### 2.3.2 Homogeneity of Variance

```{r homogeneity-test-bacteria}
# Levene's test
if(nrow(bacteria_data) > 0) {
  bacteria_levene <- leveneTest(log_reduction ~ species, data = bacteria_data)
  print(bacteria_levene)
}
```

## 2.4 ANOVA or Kruskal-Wallis Test

Based on the results of assumption testing, we select the appropriate statistical test.

```{r bacteria-statistical-test}
# Decision based on normality and homogeneity
if(nrow(bacteria_data) > 0 && length(unique(bacteria_data$species)) > 1) {
  # Check if normality assumption is met
  if(all(bacteria_normality$shapiro_p_value > 0.05, na.rm = TRUE)) {
    # Parametric ANOVA
    bacteria_anova <- aov(log_reduction ~ species, data = bacteria_data)
    print(summary(bacteria_anova))
    
    # Post-hoc if significant
    if(summary(bacteria_anova)[[1]][["Pr(>F)"]][1] < 0.05) {
      bacteria_posthoc <- TukeyHSD(bacteria_anova)
      print(bacteria_posthoc)
    }
  } else {
    # Non-parametric Kruskal-Wallis
    bacteria_kw <- kruskal.test(log_reduction ~ species, data = bacteria_data)
    print(bacteria_kw)
    
    # Dunn test for post-hoc if significant
    if(bacteria_kw$p.value < 0.05) {
      # Note: Would need dunn.test package for post-hoc
      print("Kruskal-Wallis test is significant. Consider Dunn test for pairwise comparisons.")
    }
  }
}
```

### Statistical Test Selection

**If normality assumptions are met**: We use parametric ANOVA
- More powerful than non-parametric tests
- Provides F-statistic and precise p-values
- Allows for Tukey's post-hoc comparisons

**If normality assumptions are violated**: We use Kruskal-Wallis test
- Ranks data instead of using raw values
- Robust to outliers and non-normal distributions
- H-statistic approximates chi-square distribution

### Clinical Significance

Beyond statistical significance, consider:
- **Magnitude of reduction**: -1 log (90%) vs -2 log (99%) reduction
- **Consistency**: Low variability indicates reliable treatment
- **Practical application**: Can this level of reduction be achieved in real-world settings?

# 3. pH and Dry Weight Analysis

## 3.1 pH Analysis

```{r ph-analysis}
# pH data summary
ph_data <- experiment_data %>%
  select(id_treatment, species, ph_0dpi, id_faeces) %>%
  filter(!is.na(ph_0dpi))

# Summary by species
ph_summary <- ph_data %>%
  group_by(species) %>%
  summarise(
    n = n(),
    mean_ph = mean(ph_0dpi, na.rm = TRUE),
    sd_ph = sd(ph_0dpi, na.rm = TRUE),
    min_ph = min(ph_0dpi, na.rm = TRUE),
    max_ph = max(ph_0dpi, na.rm = TRUE)
  )

kable(ph_summary, caption = "pH summary by species")

# Visualization
p5 <- ggplot(ph_data, aes(x = species, y = ph_0dpi, fill = species)) +
  geom_boxplot(alpha = 0.7) +
  geom_jitter(width = 0.2, alpha = 0.5) +
  labs(title = "Initial pH Distribution by Species",
       x = "Species",
       y = "pH at 0 DPI") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "none")

print(p5)
```

## 3.2 Dry Weight Analysis

```{r dry-weight-analysis}
# Calculate weight changes
weight_data <- experiment_data %>%
  filter(!is.na(weight_0dpi)) %>%
  mutate(
    initial_dry_weight = dry_weight_0dpi,
    water_loss_potential = weight_0dpi - dry_weight_0dpi
  )

# Summary by species
weight_summary <- weight_data %>%
  group_by(species) %>%
  summarise(
    n = n(),
    mean_initial_weight = mean(weight_0dpi, na.rm = TRUE),
    mean_dry_weight = mean(dry_weight_0dpi, na.rm = TRUE),
    mean_water_content = mean(water_content, na.rm = TRUE)
  )

kable(weight_summary, caption = "Weight characteristics by species")
```

# 4. Integrated Analysis

## 4.1 Correlation Analysis

```{r correlation-analysis}
# Prepare data for correlation
integrated_data <- experiment_data %>%
  filter(!is.na(e_coli_conc), !is.na(e_coli_mean)) %>%
  mutate(
    log_reduction = log10(e_coli_conc/e_coli_mean),
    growth_14d = area_size_14
  ) %>%
  select(species, log_reduction, growth_14d, ph_0dpi, 
         water_content, dry_weight_0dpi) %>%
  filter(complete.cases(.))

# Correlation matrix by species
if(nrow(integrated_data) > 5) {
  # Numeric data only for correlation
  cor_data <- integrated_data %>%
    select(-species) %>%
    cor(use = "complete.obs")
  
  # Visualization
  corrplot(cor_data, method = "circle", type = "upper",
           tl.col = "black", tl.srt = 45,
           title = "Correlation Matrix of Variables")
}
```

## 4.2 Multivariate Analysis

```{r multivariate-analysis}
# PCA if enough complete cases
complete_data <- integrated_data %>%
  select(-species) %>%
  filter(complete.cases(.))

if(nrow(complete_data) > 10) {
  # Perform PCA
  pca_result <- prcomp(complete_data, scale = TRUE)
  
  # Variance explained
  variance_explained <- summary(pca_result)$importance
  print(variance_explained)
  
  # Biplot
  biplot(pca_result, main = "PCA Biplot of Integrated Variables")
}
```

### Principal Component Analysis (PCA) Interpretation

PCA reduces the dimensionality of our multivariate data while preserving as much variance as possible:

**Variance Explained Table**:
- **PC1**: First principal component (explains most variance)
- **PC2**: Second principal component (explains second most variance)
- **Cumulative Proportion**: Total variance explained by first n components

**Biplot Interpretation**:
- **Arrows (loadings)**: Show how original variables relate to principal components
  - Longer arrows = more important variables
  - Arrows in same direction = positively correlated variables
  - Arrows in opposite directions = negatively correlated variables
- **Points**: Individual samples projected onto PC space
- **Clustering**: Samples with similar characteristics group together

## 4.3 Treatment Effectiveness Ranking

```{r effectiveness-ranking}
# Create composite effectiveness score
effectiveness_data <- experiment_data %>%
  filter(!is.na(e_coli_conc), !is.na(e_coli_mean)) %>%
  mutate(
    log_reduction = log10(e_coli_conc/e_coli_mean),
    growth_score = case_when(
      !is.na(area_size_14) ~ area_size_14,
      !is.na(area_size_7) ~ area_size_7 * 2,  # Extrapolate
      TRUE ~ 0
    )
  ) %>%
  group_by(species) %>%
  summarise(
    n_samples = n(),
    mean_log_reduction = mean(log_reduction, na.rm = TRUE),
    mean_growth = mean(growth_score, na.rm = TRUE),
    effectiveness_score = -mean_log_reduction + scale(mean_growth)[,1]
  ) %>%
  arrange(desc(effectiveness_score))

kable(effectiveness_data, 
      caption = "Treatment effectiveness ranking (higher score = more effective)")
```

### Effectiveness Score Interpretation

The composite effectiveness score combines:
- **Bacterial reduction capacity**: Negative log_reduction values (more negative = better)
- **Growth performance**: Standardized growth scores
- **Sample size**: Number of replicates (affects confidence in results)

**Ranking criteria**:
1. **Ideal treatment**: High bacterial reduction + robust growth
2. **Moderate treatment**: Good at one parameter, average at the other
3. **Poor treatment**: Low bacterial reduction or poor growth

```{r effectiveness-scatter}
# Visualization
p6 <- ggplot(effectiveness_data, 
             aes(x = mean_growth, y = -mean_log_reduction, 
                 color = species, size = n_samples)) +
  geom_point(alpha = 0.7) +
  geom_text(aes(label = species), vjust = -1, size = 3) +
  labs(title = "Treatment Effectiveness: Growth vs Bacterial Reduction",
       x = "Mean Growth Score",
       y = "Mean Bacterial Reduction (positive = reduction)",
       size = "Sample Size") +
  theme_minimal() +
  theme(legend.position = "bottom")

print(p6)
```

### Scatter Plot Quadrant Analysis

- **Upper right**: High growth + high bacterial reduction (optimal treatments)
- **Upper left**: Low growth + high bacterial reduction (antimicrobial specialists)
- **Lower right**: High growth + low bacterial reduction (poor antimicrobial activity)
- **Lower left**: Low growth + low bacterial reduction (ineffective treatments)

Point size indicates sample size - larger points represent more reliable estimates.

# 5. Conclusions and Recommendations

## 5.1 Key Findings Summary

```{r summary-table}
# Create comprehensive summary table
summary_table <- experiment_data %>%
  mutate(log_reduction = log10(e_coli_conc/e_coli_mean)) %>%
  group_by(species) %>%
  summarise(
    n = n(),
    growth_14d = mean(area_size_14, na.rm = TRUE),
    bacterial_reduction = mean(log_reduction, na.rm = TRUE),
    initial_ph = mean(ph_0dpi, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  mutate(
    growth_rank = rank(-growth_14d, na.last = "keep"),
    reduction_rank = rank(bacterial_reduction, na.last = "keep"),
    overall_rank = (growth_rank + reduction_rank) / 2
  ) %>%
  arrange(overall_rank)

kable(summary_table, 
      caption = "Comprehensive summary and ranking of fungal treatments",
      digits = 2)
```

## 5.2 Statistical Summary

Based on the ANOVA assumptions tests and subsequent analyses:

### Growth Analysis Results
- **ANOVA assumptions**: Normality and homogeneity of variance tests guided our statistical approach
- **Species differences**: Significant variation in colonization rates between fungal species
- **Growth patterns**: Some species show exponential growth while others plateau early
- **Variability**: High within-species variability may indicate environmental sensitivity

### Bacterial Reduction Analysis Results
- **Log reduction effectiveness**: Quantified antimicrobial activity across species
- **Statistical significance**: Determined which species significantly differ in bacterial reduction
- **Consistency**: Identified species with reliable vs. variable antimicrobial effects
- **Magnitude**: Assessed practical significance of bacterial reductions

### Integrated Analysis Results
- **Correlations**: Revealed relationships between growth, antimicrobial activity, and environmental factors
- **PCA patterns**: Identified which variables drive the most variation in treatment outcomes
- **Effectiveness ranking**: Combined multiple criteria to rank treatment options

## 5.3 Recommendations

### Immediate Actions
1. **Focus on top-ranked species**: Prioritize species with highest effectiveness scores for further development
2. **Standardize conditions**: Control for faeces batch effects and initial pH in future experiments
3. **Optimize timing**: Determine optimal treatment duration based on growth vs. antimicrobial trade-offs

### Future Research Directions
1. **Mechanistic studies**: Investigate how fungal species achieve bacterial reduction
2. **Scale-up testing**: Evaluate top performers under field conditions
3. **Combination treatments**: Test whether multiple species provide synergistic effects
4. **Environmental factors**: Study temperature, moisture, and nutrient effects on treatment success

### Practical Applications
1. **Treatment selection**: Use effectiveness scores to guide species selection for specific applications
2. **Quality control**: Monitor both growth and antimicrobial activity as treatment indicators
3. **Risk assessment**: Consider variability in treatment effects when designing safety margins

# Session Information

```{r session-info}
sessionInfo()
```